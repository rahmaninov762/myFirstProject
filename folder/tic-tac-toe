//
bool one = false; bool two = false; bool tree = false;
bool four = false; bool five = false; bool six = false;
bool seven = false; bool eight = false; bool nine = false;

while (true)
{
    Console.SetCursorPosition(1, 0);
    for (int i = 0; i < 33; i++)
    {
        Console.Write("-");
    }
    Console.WriteLine();
    for (int i = 1; i < 20; i++)
    {
        Console.WriteLine("|");
    }
    for (int i = 1; i < 20; i++)
    {
        Console.SetCursorPosition(34, i);
        Console.WriteLine("|");
    }
    Console.SetCursorPosition(1, 20);
    for (int i = 0; i < 33; i++)
    {
        Console.Write("-");
    }

    for (int i = 1; i < 20; i++)
    {
        Console.SetCursorPosition(11, i);
        Console.WriteLine("|");
    }
    for (int i = 1; i < 20; i++)
    {
        Console.SetCursorPosition(22, i);
        Console.WriteLine("|");
    }
    Console.SetCursorPosition(1, 7);
    for (int i = 0; i < 33; i++)
    {
        Console.Write("-");
    }
    Console.SetCursorPosition(1, 13);
    for (int i = 0; i < 33; i++)
    {
        Console.Write("-");
    }
    Console.SetCursorPosition(10, 25);

    Console.WriteLine("Make selection 1, 2, 3, 4, 5, 6, 7, 8, 9 = ");
    string selection = Console.ReadLine();
    switch (selection)
    {
        case "1": Console.WriteLine("1"); one = true; break;
        case "2": Console.WriteLine("2"); two = true; break;
        case "3": Console.WriteLine("3"); tree = true; break;
        case "4": Console.WriteLine("4"); four = true; break;
        case "5": Console.WriteLine("5"); five = true; break;
        case "6": Console.WriteLine("6"); six = true; break;
        case "7": Console.WriteLine("7"); seven = true; break;
        case "8": Console.WriteLine("8"); eight = true; break;
        case "9": Console.WriteLine("9"); nine = true; break;
        default: Console.WriteLine("not correct number"); break;
    }
    selection = "";

    if (one == true) { Console.SetCursorPosition(5, 3); Console.WriteLine("X"); }
    if (two == true) { Console.SetCursorPosition(15, 3); Console.WriteLine("X"); }
    if (tree == true) { Console.SetCursorPosition(25, 3); Console.WriteLine("X"); }
    if (four == true) { Console.SetCursorPosition(5, 9); Console.WriteLine("X"); }
    if (five == true) { Console.SetCursorPosition(15, 9); Console.WriteLine("X"); }
    if (six == true) { Console.SetCursorPosition(25, 9); Console.WriteLine("X"); }
    if (seven == true) { Console.SetCursorPosition(5, 15); Console.WriteLine("X"); }
    if (eight == true) { Console.SetCursorPosition(15, 15); Console.WriteLine("X"); }
    if (nine == true) { Console.SetCursorPosition(25, 15); Console.WriteLine("X"); }


    if (Console.ReadKey(true).Key == ConsoleKey.Escape)
    {
        Console.Clear();
        Console.SetCursorPosition(50, 10);
        Console.Write("You are leaving the game ...");
        Console.WriteLine();
        Thread.Sleep(500);
        break;
    }
}
